https://practice.geeksforgeeks.org/problems/minimum-swaps-required-to-bring-all-elements-less-than-or-equal-to-k-together/0#

sliding window tecnique :


Given an array of n positive integers and a number k. Find the minimum number of swaps required to bring all the numbers less than or equal to k together.

Input:
The first line of input contains integer T denoting the number of test cases. For each test case,  the first line of input contains an integer n denoting the size of the
array. Next line contains n space separated integers denoting the elements of the array. Next line contains an integer k denoting the number such that elements less than 
and equal to k are group together. 

Output:
For each test case, the output is an integer displaying the minimum swaps required.

Constraints:
1<=T<=100
1<=n<=50

Example:
Input
2
5
2 1 5 6 3
3
7
2 7 9 5 8 7 4
6
Output
1
2

Explanation:
1. To bring elements 2, 1, 3 together, swap element '5' with '3' such that final array will be- arr[] = {2, 1, 3, 6, 5}
2. To bring elements 2, 5, 4 together, swap element 7 with 5 & 9 with 4 such that the final array will be {2,5,4,7,8,7,9}   




#include <iostream>
using namespace std;

int main() {
	//code
	int t;
	cin>>t;
	while(t--)
	{
	   int n;
	   cin>>n;
	   int ar[n];
	   int c=0;
	   for(int i=0;i<n;i++)
	   {
	       cin>>ar[i];
	   }
	  int k;
	  cin>>k;
	   for(int i=0;i<n;i++)
	   {
	       if(ar[i]<=k)
	        c++;
	   }
	   int cnt=0;
	   
	    for(int i=0;i<c;i++)
	   {
	       if(ar[i]>k)
	        cnt++;
	   }
	   int i=0;
	   int j=c;
	   int ans=cnt;
	 //   cout<<ans<<endl;
	   while(j<n)
	   {
	      if(ar[i]>k)
	       cnt--;
	      if(ar[j]>k)
	       cnt++;
	     ans=min(ans,cnt);
	     j++;
	     i++;
	   }
	   
	   cout<<ans<<endl;
	}
	return 0;
}
